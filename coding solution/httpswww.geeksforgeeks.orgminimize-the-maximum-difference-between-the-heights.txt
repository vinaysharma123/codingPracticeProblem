#include <iostream>
#include<vector>
#include<algorithm>
using namespace std;

 int getMinDiff(int arr[], int n, int k)
 {
     sort(arr,arr+n);   //sort array
     int maxi=0;
     int mini=0;
     int mindiff=arr[n-1]-arr[0];//store initial diff of largest and smallest height
       for(int i=0;i<n-1;i++)
       { 
            maxi=max(arr[i]+k,arr[n-1]-k);  //finding largest after performing operation
            mini=min(arr[0]+k,arr[i+1]-k);  //finding minimum after operation
            
             mindiff=min(mindiff, maxi-mini);     //calculate min difference height tower
           
       }
       return mindiff;
     
 }                           // for every iteration check min&max height tower
                              // and if max-min is less than mindiff update mindiff;
   
 



 int main()
{ 
     int k=3;
      int n=4;
        int arr[n]={1, 5, 15, 10};
        auto ans =getMinDiff(arr, n, k);
        cout << ans << "\n";
    
    return 0;
}